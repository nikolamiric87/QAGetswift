"use strict";

exports.__esModule = true;
exports.PreparedResponseInfo = exports.ResponseInfo = exports.RequestInfo = void 0;

var _sameOriginCheckFailedStatusCode = _interopRequireDefault(require("../../request-pipeline/xhr/same-origin-check-failed-status-code"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*eslint-enable no-unused-vars*/
class RequestInfo {
  constructor(ctx, opts) {
    this.requestId = ctx.requestId;
    this.userAgent = opts.headers['user-agent'];
    this.url = opts.url;
    this.method = opts.method.toLowerCase();
    this.isAjax = ctx.isXhr || ctx.isFetch;
    this.headers = opts.headers;
    this.body = opts.body;
    this.sessionId = ctx.session.id;
  }

}

exports.RequestInfo = RequestInfo;

class ResponseInfo {
  constructor(ctx) {
    this.requestId = ctx.requestId;
    this.headers = ctx.destRes.headers;
    this.body = ctx.nonProcessedDestResBody;
    this.statusCode = ctx.isSameOriginPolicyFailed ? _sameOriginCheckFailedStatusCode.default : ctx.destRes.statusCode;
    this.sessionId = ctx.session.id;
  }

}

exports.ResponseInfo = ResponseInfo;

class PreparedResponseInfo {
  constructor(responseInfo, opts) {
    this.requestId = responseInfo.requestId;
    this.statusCode = responseInfo.statusCode;
    this.sessionId = responseInfo.sessionId;
    if (opts.includeHeaders) this.headers = responseInfo.headers;
    if (opts.includeBody) this.body = responseInfo.body;
  }

}

exports.PreparedResponseInfo = PreparedResponseInfo;